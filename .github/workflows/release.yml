name: Release

on:
  push:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'chore: release')"

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ secrets.RELEASE_TOKEN }}
        
    - name: Git config
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

    - name: Fetch all tags
      run: git fetch --tags origin

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm ci

    - name: Install UI dependencies
      working-directory: ./package/ui
      run: npm ci

    - name: Install API dependencies
      working-directory: ./package/api
      run: npm ci

    - name: Release
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: |
        # Run release in a way that ensures atomicity
        if ! npm run release -- --ci \
          --git.requireUpstream=false \
          --git.commitMessage="chore: release v${version}" \
          --git.tagName="v${version}" \
          --github.release=true \
          --no-git.requireCleanWorkingDir; then
          echo "Release failed"
          exit 1
        fi
    
    - name: Rollback on failure
      if: failure() && steps.release.outcome == 'failure'
      run: |
        # Get the latest tag
        LATEST_TAG=$(git describe --tags --abbrev=0)
        
        # Delete the tag locally and remotely
        git tag -d $LATEST_TAG || true
        git push origin :refs/tags/$LATEST_TAG || true
        
        # Unpublish from npm if needed
        VERSION=${LATEST_TAG#v}
        npm unpublish pg-boss-dashboard@$VERSION || true